name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      hasNextVersion: ${{ steps.get_version.outputs.hasNextVersion }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Get Next Version
        id: get_version
        uses: thenativeweb/get-next-version@main

  prepare:
    runs-on: ${{ matrix.build-on}}
    strategy:
      matrix:
        include:
          - rid: linux-x64
            build-on: ubuntu-latest
          - rid: linux-arm64
            build-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Publish for ${{ matrix.rid }}
        working-directory: src/DockedBackup.Console
        run: dotnet publish -r ${{ matrix.rid }} -c Release --self-contained -p:PublishAot=true -o publish/

      - name: Copy Service & Scripts
        run: cp build/* src/DockedBackup.Console/publish

      - name: Pack artifact
        working-directory: src/DockedBackup.Console/publish
        run: tar -czf $GITHUB_WORKSPACE/dockedbackup-${{ matrix.rid }}.tar.gz .

      - name: Upload Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.rid }}
          path: dockedbackup-${{ matrix.rid }}.tar.gz

  pkg:
    needs: [prepare, get_version]
    runs-on: ${{ matrix.build-on }}
    strategy:
      matrix:
        include:
          - rid: linux-x64
            container: archlinux:latest
            build-on: ubuntu-latest
          - rid: linux-arm64
            container: menci/archlinuxarm:latest
            build-on: ubuntu-24.04-arm
    container: ${{matrix.container}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup build environment
        run: pacman -Syu --noconfirm --needed base-devel

      - name: Create builder user
        run: |
          useradd -m builder
          chown -R builder:builder $GITHUB_WORKSPACE

      - name: Download Source‑Tarball
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.rid }}
          path: packaging/pkg

      - name: build pkg package
        working-directory: packaging/pkg
        run: |
          mv dockedbackup-${{matrix.rid}}.tar.gz dockedbackup.tar.gz
          su builder -c "makepkg -f --skippgpcheck"

      - name: Upload pkg package
        uses: actions/upload-artifact@v4
        with:
          name: pkg-${{ matrix.rid }}
          path: packaging/pkg/*.pkg.tar.*

  deb:
    needs: [prepare, get_version]
    runs-on: ${{ matrix.build-on }}
    strategy:
      matrix:
        include:
          - rid: linux-x64
            build-on: ubuntu-latest
          - rid: linux-arm64
            build-on: ubuntu-24.04-arm
    env:
      VERSION: ${{ needs.get_version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup build environment
        run: |
          sudo apt update
          sudo apt install -y build-essential dh-make devscripts debhelper fakeroot

      - name: Download Source‑Tarball
        uses: actions/download-artifact@v4
        with:
            name: ${{ matrix.rid }}
            path: packaging/debian

      - name: Prepare the build
        working-directory: packaging/debian
        run: |
          tar -xzf dockedbackup-${{matrix.rid}}.tar.gz --strip-components=1
          mv dockedbackup.install.sh dockedbackup.postinst
          mv dockedbackup.remove.sh dockedbackup.prerm

      - name: build deb package
        working-directory: packaging/
        run: |
          fakeroot debuild -us -uc
         
      - name: Upload deb package
        uses: actions/upload-artifact@v4
        with:
          name: deb-${{ matrix.rid }}
          path: dockedbackup_*.deb

  # release:
  #   needs: [ arch-pkg ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Create github release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         tag_name: ${{ github.ref_name }}
  #         files: |
  #           dockedbackup-linux-x64.tar.gz
  #           dockedbackup-linux-arm64.tar.gz
  #           dockedbackup-linux-x64.pkg.tar.zst
  #           dockedbackup-linux-arm64.pkg.tar.zst
